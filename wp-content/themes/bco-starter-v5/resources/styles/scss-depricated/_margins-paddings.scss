/**
 * .mb-TYPE
 * .mb-TYPE-at-SIZE
 * Margin bottom on single elements
 */

$margins: (
    'small': 20px,
    'medium': 40px,
    'large': 80px,
    'none': 0px
);

// Mobile
@each $type, $margin in $margins { 
    .mb-#{$type} { margin-bottom: $margin; } 
    .mt-#{$type} { margin-top: $margin; }
}

// Tablet
@each $type, $margin in $margins {
    @include above-medium { .mb-#{$type}-at-medium { margin-bottom: $margin; } };
    @include above-medium { .mt-#{$type}-at-medium { margin-top: $margin; } };
}

// Desktop
@each $type, $margin in $margins {
    @include above-large { .mb-#{$type}-at-large { margin-bottom: $margin; } };
    @include above-large { .mt-#{$type}-at-large { margin-top: $margin; } };
}

/**
 * .padding-TYPE
 * .padding-TYPE-at-SIZE
 * For padding sections
 */

$paddings: (
    'small': 20px,
    'medium': 40px,
    'large': 80px 40px,
    'none': 0px
);

@each $type, $padding in $paddings { .padding-#{$type} { padding: $padding; } }
@each $type, $padding in $paddings { @include above-medium { .padding-#{$type}-at-medium { padding: $padding; } }; }
@each $type, $padding in $paddings { @include above-large { .padding-#{$type}-at-large { padding: $padding; } }; }

/** 
 * .spacing-TYPE
 * For horizontally spacing lists of elements, excluding the last child
 */

$spacings: (
    'small': 20px,
    'medium': 40px,
    'large': 80px
);

// Mobile first
@each $type, $spacing in $spacings { .spacing-#{$type} > *:not(:last-child) { margin-bottom: $spacing }; }
@each $type, $spacing in $spacings { @include above-medium { .spacing-#{$type}-at-medium > *:not(:last-child) { margin-bottom: $spacing } }; }
@each $type, $spacing in $spacings { @include above-large { .spacing-#{$type}-at-large > *:not(:last-child) { margin-bottom: $spacing } }; }

