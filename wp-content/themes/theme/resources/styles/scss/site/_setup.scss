/**
 * =============================
 * Setup
 * =============================
 * 
 * Table of Contents: 
 * ------------------
 * 1.0 - Variables
 * 2.0 - Responsive Breakpoints
 * 3.0 - Functions/Mixins
 */

/**
 * =============================
 * 1.0 - Variables
 * ============================= 
 */

 /** Global */
$base-font-size: 16;

/** Layout */
$container: 1200px;

/** Fonts */
$fontFamily-body: 'Open Sans', sans-serif;
$fontFamily-headers: 'Open Sans', sans-serif;
$fontFamily-alt: 'Open Sans', sans-serif;
$headlineSize-h1: 30;
$headlineSize-h2: 25;
$headlineSize-h3: 22;
$headlineSize-h4: 20;
$headlineSize-h5: 18;
$headlineSize-h6: 16;

/** Colors */
$primary: #607D8B;
$secondary: #C2185B;
$black: #212121;
$white: #FFFFFF;
$white-grey: #F5F5F5;
$light-grey: #EEEEEE;

/** Masthead */
$header-height: 100px;
$header-height-mobile: 80px;

$siteMasthead-background: #fff;
$siteMasthead-linkColors: $black;
$siteMasthead-navLineHeight: 40px;
$siteMasthead-height-mobile: 100px;
$siteMasthead-height: 100px;

/** Elements */
$borderColor: $light-grey;
$headlineColor: $black;
$paragraphColor: $black;

/** Forms */
$formField-height: 50px;
$formField-borderRadius: 3px;
$formField-borderWidth: 1px;
$formField-borderColor: $light-grey;
$formField-backgroundColor: $white;


/**
 * =============================
 * 2.0 - Responsive Breakpoints
 * ============================= 
 */

@mixin breakpoint($direction, $point1, $point2: null) {

	@if $direction == 'above' {
		@media (min-width: $point1) { @content; }

	} @else if $direction == 'below' {
		@media (max-width: $point1) { @content; }

	} @else if $direction == 'between' {
		@media (min-width: $point1) and (max-width: $point2) { @content; }
	}
}

/**
 * =============================
 * 3.0 - Functions/Mixins
 * ============================= 
 */

@function rem( $pixels, $context: 16 ) {
	@return ($pixels / $context) * 1rem;
}

@mixin font-size($pixels) {
	font-size: $pixels + px;
	font-size: rem($pixels);
}

@mixin clearfix {
	&:before, 
	&:after { 
		content: ""; 
		display: table; 
	}

	&:after { 
		clear: both; 
	}
}

@mixin backgroundCover($src: null, $color: transparent) {
	@if $src { background-image: url($src); }
	background-color: $color;
	background-repeat: no-repeat;
	background-size: cover;
	background-position: 50%;
}

@mixin backgroundContain($src: null) {
	@if $src { background-image: url($src); }
	background-size: contain;
	background-repeat: no-repeat;
	background-position: 50%;
}

@mixin fillContainer() {
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}

@mixin gridSetup($cols, $margin, $selector) {
	font-size: 0;

	$cellWidth: ( 100% / $cols );
	$colsMinusOne: ($cols - 1); 
	$adjustedMargin: ($margin * $colsMinusOne) / $cols;

	> #{$selector} {
		@include fontSize($baseFontSize);
		margin-bottom: $margin;
		margin-right: $margin;
		display: inline-block;
		vertical-align: top;
		width: calc( #{$cellWidth} - #{$adjustedMargin} );

		// Far right column
		&:nth-of-type(#{$cols}n) { 
			margin-right: 0;
		}

		// Far left column
		&:nth-of-type(#{$cols}n+1) {}
	
		// Bottom row
		@for $i from 1 through $cols {
			&:nth-last-of-type(#{$i}) {
				margin-bottom: 0;
			}
		}
	}
}

@mixin backgroundShadow($opacity: 1) {
	position: relative;

	&:after {
		content: "";
		position: absolute;
		top: 40%;
		left: 0;
		bottom: 0;
		right: 0;
		z-index: 0;
		opacity: $opacity;
		background-image: linear-gradient(to bottom, transparent, #000);
	}	
}